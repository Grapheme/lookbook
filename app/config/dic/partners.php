<?php
/**
 * С помощью конфигурационных файлов в папке dic можно производить тонкую настройку каждого конкретного словаря в отдельности:
 * - добавлять собственные поля к объектам DicVal
 * - добавлять пункты меню, фильтры, кнопки, поля, ссылки...
 * - добавлять кнопки в область "Действия" для каждой записи DicVal
 * - модифицировать выводимый текст в списках
 * - ...
 *
 * Для каждого словаря (Dic) создается отдельный файл, в котором описана его конфигурация.
 * Название файла должно соответствовать системному имени словаря.
 *
 * Все элементы массива должны являться функциями-замыканиями, внутри которых происходит возврат нужных данных.
 *
 * Для каждого словаря можно определить набор "постоянных" полей (fields) и полей для мультиязычных версий записи (fields_i18n).
 * Первые будут доступны для редактирования всегда, вторые - только если сайт имеет больше чем 1 язык.
 *
 * Каждое поле представлено в наборе именем на форме (ключ массива) и набором свойств (поля массива по ключу).
 * Обязательно должен быть определен тип поля (type) и заголовок (title).
 * Также можно задать следующие свойства:
 * - default - значение поля по-умолчанию
 * - others - набор дополнительных произвольных свойств элемента, таких как class, style, placeholder и т.д.
 * - handler - функция-замыкание, вызывается для обработки значения поля после получения ИЗ формы, перед записью в БД. Первым параметром передается значение поля, вторым - существующий объект DicVal, к которому относится данное поле
 * - value_modifier - функция-замыкание, вызывается для обработки значения поля после получения значения из БД, перед выводом В форму
 * - after_save_js - JS-код, который будет выполнен после сохранения страницы
 * - content - содержимое, которое будет выведено на экран, вместо генерации кода элемента формы
 * - label_class - css-класс родительского элемента
 *
 * Некоторые типы полей могут иметь свои собственные уникальные свойства, например: значения для выбора у поля select; accept для указания разрешенных форматов у поля типа file и т.д.
 *
 * [!] Вывод полей на форму происходит с помощью /app/lib/Helper.php -> Helper::formField();
 *
 * На данный момент доступны следующие поля:
 * - text
 * - textarea
 * - textarea_redactor (доп. JS)
 * - date (не требует доп. JS, работает для SmartAdmin из коробки, нужны handler и value_modifier для обработки)
 * - image (использует ExtForm::image() + доп. JS)
 * - gallery (использует ExtForm::gallery() + доп. JS, нужен handler для обработки)
 * - upload
 * - video
 * - select
 * - select-multiple
 * - checkbox
 * - checkboxes (замена select-multiple)
 * - hidden
 * - custom
 * - textview (если нет значения - текстовая строка, если есть - значение из view_text)
 *
 * Типы полей, запланированных к разработке:
 * - radio
 * - upload-group
 * - video-group
 *
 * Также в планах - возможность активировать SEO-модуль для каждого словаря по отдельности (ключ массива seo) и обрабатывать его.
 *
 * [!] Для визуального разделения можно использовать следующий элемент массива: array('content' => '<hr/>'),
 *
 * @author Zelensky Alexander
 *
 */
return array(

    'fields_i18n' => function () {

        return array(
            'title' => array(
                'title' => 'Название',
                'type' => 'text',
            ),
            'background' => array(
                'title' => 'Изображение',
                'type' => 'image',
            ),
            'site_url' => array(
                'title' => 'Ссылка на сайт',
                'type' => 'text',
            )
        );

    },

    'menus' => function($dic, $dicval = NULL) {
        $menus = array();
        return $menus;
    },

    'actions' => function($dic, $dicval) { },

    'hooks' => array(),

    'seo' => false
);